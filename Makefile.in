# Top makefile to build  @PACKAGE_STRING@
#
# @configure_input@
#

prefix=@prefix@
exec_prefix=@exec_prefix@
INCLUDEDIR=@includedir@/pthread
LIBDIR=@libdir@
LOCALEDIR=@localedir@

INSTALL=@INSTALL@ 
RM=@RM@
MKDIR=@MKDIR_P@
PACKAGE_NAME=@PACKAGE_NAME@
PACKAGE_DEVELOP=@PACKAGE_NAME@-@BUILD@-@build_os@-dev.tar.gz
PACKAGE=@PACKAGE_NAME@-@PACKAGE_VERSION@-@build_os@.tar.gz
HEADERS=@HEADERS@
DOXYGEN=@DOXYGEN@
CODECHECK=@CODECHECK@
LN_S=@LN_S@
DEPLOY=@DEPLOY@
REPOSITORY=@REPOSITORY@

PTHREADLIB=libcpp-pthread.a

all: 
	cd src && $(MAKE)

pkg: clean all
	$(MKDIR) distrib
	tar cf - include lib  | gzip -c > distrib/$(PACKAGE_DEVELOP)

# this target can only be used if REPOSITORY is set (hence the test)
deploy: pkg
	@test ! -z "$(REPOSITORY)" && ( cd distrib && $(DEPLOY) $(PACKAGE_DEVELOP) $(REPOSITORY) 2> /dev/null && echo "deployed $(PACKAGE_DEVELOP) here $(REPOSITORY)" ) || echo "WARNING use ./configure --enable-repository to enable deploy target"

globber:clean
	-$(RM) -R Makefile autom4te.cache config.log config.status doxyfile sonar-project.properties

clean:
	-(cd src && $(MAKE) clean)

codecheck: all
		$(CODECHECK)

version:
	touch configure.ac && ( cd src && touch configure.ac )
	autoconf && ( cd src && autoconf )
	-echo "don't forget to run configure."

doxygen:
	${DOXYGEN} doxyfile

install:
	$(MKDIR) $(INCLUDEDIR)
	cd include/pthread && $(INSTALL) *.hpp *.h $(INCLUDEDIR)
	$(INSTALL) lib/lib@PACKAGE_NAME@-@BUILD@.a @libdir@
	cd ${LIBDIR} && $(LN_S) -f lib@PACKAGE_NAME@-@BUILD@.a lib@PACKAGE_NAME@.a

uninstall:
	$(RM) -R  $(INCLUDEDIR)
# not a good idea	$(RM) @libdir@/lib@PACKAGE_NAME@-@BUILD@.a @libdir@/lib@PACKAGE_NAME@.a 
	$(RM) @libdir@/lib@PACKAGE_NAME@*.a
